@supports -moz-bool-pref("outlook2003.theme") {
  @media (-moz-windows-default-theme) {
    /** GLOBAL SHARED ********************************************************************/
    /* Links */
    .text-link {
      color: -moz-nativehyperlinktext;
      cursor: pointer;
    }
    .text-link:hover {
      text-decoration: underline;
    }
    .text-link:-moz-lwtheme {
      color: inherit;
      text-decoration: underline;
    }
    .text-link:focus-visible {
      outline: var(--focus-outline);
      /* Not using --focus-outline-offset here because that's intended for elements
         with a background, and we only want a slight offset here while not
         overlapping adjacent text. */
      outline-offset: 1px;
      border-radius: 1px;
    }
    /* Panel footer buttons */
    .panel-footer {
      display: flex;
      justify-content: flex-end;
      margin: 8px 16px 16px;
    }
    .panel-footer > button {
      appearance: none;
      border: 0;
      border-radius: 4px;
      color: var(--button-color, inherit);
      background-color: var(--button-bgcolor, color-mix(in srgb, currentColor 13%, transparent));
      padding: 8px 16px;
      font-weight: 600;
      min-width: 0;
      margin-inline: 8px 0;
      margin-bottom: 0;
    }
    .panel-footer > button[disabled] {
      opacity: var(--win-disabled-icon-opacity) !important;
    }
    .panel-footer > button:focus-visible {
      outline: var(--focus-outline);
      outline-offset: var(--focus-outline-offset);
    }
    .panel-footer > button:not([disabled]):hover {
      background-color: var(--button-hover-bgcolor, color-mix(in srgb, currentColor 17%, transparent));
    }
    .panel-footer > button:not([disabled]):hover:active {
      background-color: var(--button-active-bgcolor, color-mix(in srgb, currentColor 30%, transparent));
    }
    .panel-footer > button:not([disabled])[default] {
      color: var(--button-primary-color);
      background-color: var(--button-primary-bgcolor);
    }
    .panel-footer > button:not([disabled])[default]:hover {
      background-color: var(--button-primary-hover-bgcolor);
    }
    .panel-footer > button:not([disabled])[default]:hover:active {
      background-color: var(--button-primary-active-bgcolor);
    }
    @media (-moz-platform: windows) {
      /* Swap the primary and secondary action, because Windows
       * platform conventions put the primary action on the left. */
      .panel-footer > button[default] {
        order: -1;
      }
    }
    /* Autoscroll popup */
    .autoscroller {
      appearance: none;
      /* Resets the native styles in windows and macOS */
      border: none;
      background-color: transparent;
      -moz-window-shadow: none;
      --autoscroll-background-image: url("chrome://global/skin/icons/autoscroll.svg");
      --panel-border-color: rgba(0,0,0,.4);
      --panel-padding: 0;
      --panel-background: rgba(249,249,250,.8) no-repeat center var(--autoscroll-background-image);
      /* Set pointer-events: none; so that mousemove events can be handled by AutoScrollChild.jsm. */
      pointer-events: none;
    }
    .autoscroller::part(content) {
      border-radius: 100%;
      background-clip: padding-box;
      box-shadow: 0 0 4px rgba(0,0,0,.2);
      margin: 4px;
    }
    .autoscroller[scrolldir="NS"] {
      --autoscroll-background-image: url("chrome://global/skin/icons/autoscroll-vertical.svg");
    }
    .autoscroller[scrolldir="EW"] {
      --autoscroll-background-image: url("chrome://global/skin/icons/autoscroll-horizontal.svg");
    }
    /* Combobox dropdown renderer */
    #ContentSelectDropdown > menupopup {
      /* The menupopup itself should always be rendered LTR to ensure the scrollbar aligns with
       * the dropdown arrow on the dropdown widget. If a menuitem is RTL, its style will be set accordingly */
      direction: ltr;
    }
    #ContentSelectDropdown > menupopup::part(arrowscrollbox-scrollbox) {
      scrollbar-width: var(--content-select-scrollbar-width, auto);
    }
    #ContentSelectDropdown > menupopup[customoptionstyling="true"]::part(arrowscrollbox) {
      /* When authors specify a custom background, we use background-image to specify the author-supplied color.
       * In that case, we don't want stuff like custom appearance or custom
       * backgrounds, so we make sure to apply it on top of the default background. */
      background-image: var(--content-select-background-image, none);
      background-color: -moz-Combobox;
    }
  }
}